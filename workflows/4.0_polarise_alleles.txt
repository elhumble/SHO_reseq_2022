Workflow to polarise alleles using outgroup species

#~~~~~~~~~~~~~~#
#   Polarise   #
#~~~~~~~~~~~~~~#

# genome data used for polarisation

Blue wildebeest Connochaetes taurinus
https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6902709

Topi Damaliscus lunatus
https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6913384
https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6913385
				
Hartebeest Alcelaphus buselaphus
https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6922939
https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6922940

#~~~~~~~~~~~~~~~~~~~#
#   Download data   #
#~~~~~~~~~~~~~~~~~~~#

# Download data from SRA:
# https://github.com/ncbi/sra-tools/wiki/HowTo:-fasterq-dump

module load igmm/apps/sratoolkit/2.10.8

# In
# /exports/cmvm/eddie/eb/groups/ogden_grp/emily/SHO_reseq_2022/data/raw/other_species/wildebeest_topi_hartebeest

# blue wildebeest
fasterq-dump --split-files -e 4 SRR6902709

# topi
fasterq-dump --split-files -e 4 SRR6913384

# hartebeest
fasterq-dump --split-files -e 4 SRR6922939
fasterq-dump --split-files -e 4 SRR6922940

# Align to SHO genome assembly

6.0_align_sp.sh

# SortSam

6.1_SortSam.sh

# Output in data/out/6_load/DS_NS/polarise/wildebeest_topi_hartebeest

#~~~~~~~~~~~~~~#
#   Coverage   #
#~~~~~~~~~~~~~~#

# Depth of coverage
# On qlogin

module add roslin/samtools/1.10

# In 6_load/DS_NS/polarise/wildebeest_topi_hartebeest/bam

mkdir cov

samtools coverage SRR6902709_mapped_sorted.bam > SRR6902709_mapped_sorted_cov.txt
samtools coverage SRR6913384_mapped_sorted.bam > SRR6913384_mapped_sorted_cov.txt
samtools coverage SRR6922939_mapped_sorted.bam > SRR6922939_mapped_sorted_cov.txt
samtools coverage SRR6922940_mapped_sorted.bam > SRR6922940_mapped_sorted_cov.txt

awk '{print $7}' SRR6902709_mapped_sorted_cov.txt > cov/SRR6902709_mapped_sorted_cov.txt
awk '{print $7}' SRR6913384_mapped_sorted_cov.txt > cov/SRR6913384_mapped_sorted_cov.txt
awk '{print $7}' SRR6922939_mapped_sorted_cov.txt > cov/SRR6922939_mapped_sorted_cov.txt
awk '{print $7}' SRR6922940_mapped_sorted_cov.txt > cov/SRR6922940_mapped_sorted_cov.txt

rm *cov.txt

# Check coverage on local 3.0_outgroup_depth.R

# Merge bam files with samtools

6.2_MergeSam.sh

# Output is outgroup_merged.bam

#~~~~~~~~~~~~~~~~~~~#
#   Get consensus   #
#~~~~~~~~~~~~~~~~~~~#

# Get consensus with doFasta 2 and doCounts 1 in angsd
# http://www.popgen.dk/angsd/index.php/Fasta

6.3_doFasta.sh

# Output is outgroup_consensus.fasta.fa

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#   Extract consensus base at SNP positions   #
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# https://bedtools.readthedocs.io/en/latest/content/tools/getfasta.html

# Extract SNP positions from filtered VCF file and convert to bed file

6.4_vcf_to_bed.sh

# Output is ORYX_geno_DS_NS_biallelic_chr_mdepth_miss_maf.bed

# On qlogin in 6_load/DS_NS/polarise/wildebeest_topi_hartebeest

module load roslin/bedtools/2.29.2

#~~ Extract ancestral alleles from outgroup consensus

gunzip outgroup_consensus.fasta.fa.gz

bedtools getfasta -fi outgroup_consensus.fasta.fa \
-bed ORYX_geno_DS_NS_biallelic_chr_mdepth_miss_maf.bed \
-fo ancestral_alleles.out

#~~ Reformat ancestral alleles file

6.5_format_ancestral_alleles.sh

# Output is ancestral_alleles.txt for use when polarising PLINK files

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#      Polarise alleles       #
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# Using PLINK version 2.0

# see here for PLINK 2.0
https://groups.google.com/g/plink2-users/c/cJAeJ3OztV4/m/bqHjOZUAAQAJ

# In 6_load/DS_NS/polarise/wildebeest_topi_hartebeest

module load roslin/plink/2.0.0

# Convert plink files into vcf
# First add ID column into VCF as this is what PLINK uses to search
# SNPs

plink2 --vcf
../../../../4_vcftools/DS_NS/ORYX_geno_DS_NS_biallelic_chr_mdepth_miss_maf.recode.vcf
\
--set-missing-var-ids @:# \
--recode vcf \
--allow-extra-chr \
--out temp

# remove SNPs with Ns in alignment (and therefore can't infer) 
# Switch ref alleles when they are wrong
# Extract SNPs that could be identified in wildebeest alignment and rotate
# allele codes where necessary

awk '{print $1}' ancestral_alleles.txt > ancestral_positions.txt

plink2 --vcf temp.vcf \
--extract ancestral_positions.txt \
--ref-allele force ancestral_alleles.txt 2 1 \
--recode vcf \
--allow-extra-chr \
--out temp2

# Remove these SNPs with ref allele mismatches i.e. ancestral allele
# from alignment matched neither of the SNPs

grep 'Warning' temp2.log | awk {'print $7'} | sed 's/.//;s/.$//' | sed
's/.$//' > mismatches.txt

plink2 --vcf temp2.vcf \
--exclude mismatches.txt \
--allow-extra-chr \
--export vcf-4.2 \
--threads 1 \
--out ORYX_geno_DS_NS_biallelic_chr_mdepth_miss_maf_polarised

# remove temp vcfs

rm temp.vcf temp2.vcf

#~~ END
#~~ Go to variant annotation

